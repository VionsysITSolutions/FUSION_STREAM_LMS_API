name: Deploy Node Application

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: self-hosted
        steps:
            - name: Checkout Source
              uses: actions/checkout@v4

            - name: Build Docker Image
              run: docker build -t nodejs-app:latest .

    deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: Stop and Remove Existing Container
              run: docker rm -f nodejs-app-container || true

            - name: Create .env File
              run: |
                  cat <<EOF > .env
                  PORT=${{ secrets.PORT }}
                  DATABASE_URL=${{ secrets.DATABASE_URL }}
                  REDIS_URL=${{ secrets.REDIS_URL }}
                  SMTP_HOST=${{ secrets.SMTP_HOST }}
                  SMTP_PORT=${{ secrets.SMTP_PORT }}
                  SMTP_SERVICE=${{ secrets.SMTP_SERVICE }}
                  SMTP_MAIL=${{ secrets.SMTP_MAIL }}
                  SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
                  JWT_SECRET=${{ secrets.JWT_SECRET }}
                  FRONTEND_URL=${{ secrets.FRONTEND_URL }}
                  RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
                  RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
                  RAZORPAY_WEBHOOK_SECRET=${{ secrets.RAZORPAY_WEBHOOK_SECRET }}
                  AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
                  AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
                  AWS_REGION=${{ secrets.AWS_REGION }}
                  EOF

            - name: Run Docker Container
              run: |
                  docker run -d \
                    -p 8080:8080 \
                    --name nodejs-app-container \
                    --env-file .env \
                    nodejs-app:latest

            - name: Remove .env File
              run: rm .env
